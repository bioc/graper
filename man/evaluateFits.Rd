% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/evaluation_functions.R
\name{evaluateFits}
\alias{evaluateFits}
\title{Evaluate fits from various regression methods}
\usage{
evaluateFits(allFits, Xtest, ytest)
}
\arguments{
\item{allFits}{List as produced by \code{\link{runMethods}}}

\item{Xtest}{Design matrix of size n' x p
(same feature structure as used in \code{\link{runMethods}})}

\item{ytest}{Response vector of size n'}
}
\value{
a list as produced by \code{\link{runMethods}} with
 additional predicition performance slots in the summaryList, i.e. the list contains
\describe{
\item{summaryList}{list with the fitted models for each method that was included in the comparison, each containing the
runtime, estimated penalty factors, coefficients, intercepts, sparsity level and the full output returned by the methods' call (out) as in
the output produced by \code{\link{runMethods}}. In addition, it contains performance statistics such as root mean squared error (RMSE) and
feautre selection properties (if \code{beta0} was specified)}
\item{groupnames}{groupnames from \code{annot}}
\item{varnames}{predictor names}
\item{family}{likelihoods model used}
\item{n}{number of samples}
\item{p}{number of features}
\item{G}{number of groups}
\item{annot}{annotation of features to groups as specified when calling \code{\link{runMethods}}}
}
}
\description{
Function to evaluate results from \code{\link{runMethods}} on test data.
}
\details{
This function can be used to evaluate the fits of various method as produced by \code{\link{runMethods}} on a test dataset.
If the true coefficients of the model are known they can be specified via \code{beta0} and \code{trueintercept}.
Then, additionally the error on the estimates is evaluates as well as the feature selection performance.
Note that for grpRR the selected features are determined by the posterior inclusion probabilities  with
a feature being called active for s>0.5 (The method grpRR_cutoff sets inactive with s<=0.5 coefficients to exactly zero).
}
\examples{
dat <- makeExampleData()
ntrain <- dat$n/2
fit <- runMethods(dat$X[seq_len(ntrain),],
 dat$y[seq_len(ntrain)], dat$annot,
  beta0 = dat$beta)
evalFit <- evaluateFits(fit, dat$X[seq_len(ntrain) + dat$n/2,],
 dat$y[seq_len(ntrain)+ dat$n/2])
}
