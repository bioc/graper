{
    "collab_server" : "",
    "contents" : "# R function to call the different C functions defined in fit_grpRR.cpp\n#\n# fit_grpRR\n#\n# This file contains the main function to fit a grpRR model.\n# fit_gprRR\n# ---------------------------\n\n#'  Fit grpRR model\n#'\n#'  Main function to fit a grpRR model.\n#' @param X Design matrix of size n x p\n#' @param y Response vector of size n\n#' @param annot Factor of length p indicating group membership of each feature\n#' @param factoriseQ If true, the variational distribution is assumed to fully factorize across features (rougher approx., but faster). If spikeslab=F, this is always done.\n#' @param spikeslab If true, a spike and slab prior is used instead of a normal prior\n#' @param d_tau hyper-parameters for prior of tau (noise precision)\n#' @param r_tau hyper-parameters for prior of tau (noise precision)\n#' @param d_gamma hyper-parameters for prior of gamma (coeffient's prior precision)\n#' @param r_gamma hyper-parameters for prior of gamma (coeffient's prior precision)\n#' @param r_pi hyper-parameters for prior of pi (Spike-Slab-Bernoulli variable prior probabiliy of being 1)\n#' @param d_pi hyper-parameters for prior of pi (Spike-Slab-Bernoulli variable prior probabiliy of being 1)\n#' @param max_iter maximum number of iterations\n#' @param th convergence threshold for ELB\n#' @param intercept boolean, indicating wether to fit an intercept\n#' @param calcELB boolean, indicating wether to calculate ELB\n#' @param verbose boolean, indicating wether to print out intermediate messages during fitting\n#' @param freqELB determines frequency at which ELB is to be calculated, i.e. each feqELB-th iteration\n#' @return List of fitted parameters .....\n\n\n#' @useDynLib grpRR\n#' @import Rcpp\n#'\n\n\nfit_grpRR<-function(X,y,annot, factoriseQ=T, spikeslab= F, d_tau=0.001, r_tau=0.001, d_gamma=0.001, r_gamma=0.001,\n                    r_pi=1, d_pi=1, max_iter=1000, th=1e-7, intercept=T, calcELB=T, verbose=F, freqELB=10, family=\"gaussian\"){\n\n  stopifnot(ncol(X)==length(annot))\n\n  #check structure of annot: needs to be 1:g with 1 <-> frist group etc\n  annot<-as.factor(annot)\n\n  #get data dimension\n  p<-ncol(X) #no of features\n  n<-nrow(X) #no of samples\n\n  #get group structure\n  g<-length(unique(annot))\n  NoPerGroup<-sapply(unique(annot), function(x) sum(annot==x))\n  names(NoPerGroup)<-unique(annot)\n\n  if(family==\"gaussian\"){\n  if(intercept){\n    X<-scale(X, center=T, scale=F)\n    y<-scale(y, center=T, scale =F)\n  }\n\n    #call C function depending on FacType and spikeslap arguments\n  if(spikeslab){\n    if(!factoriseQ) warning(\"Using fully factorized approach with a spike and slab prior\")\n    res<-grRRCpp_sparse_ff(X,y, annot,g, NoPerGroup, d_tau, r_tau, d_gamma, r_gamma, r_pi, d_pi, max_iter, th, calcELB, verbose, freqELB)\n  } else{\n    if(factoriseQ) res<-grRRCpp_dense_ff(X,y, annot,g, NoPerGroup, d_tau, r_tau, d_gamma, r_gamma, max_iter, th, calcELB, verbose, freqELB)\n    else res<-grRRCpp_dense_nf(X,y, annot,g, NoPerGroup, d_tau, r_tau, d_gamma, r_gamma, max_iter, th, calcELB, verbose, freqELB)\n  }\n\n  #calculate intercept\n  if(intercept) intercept<-attr(y, \"scaled:center\")-attr(X, \"scaled:center\")%*%res$EW_beta else intercept<-NULL\n\n  #return mean of approximate posterior (other quantities of interes: tau, lower bound on model evidence etc)\n  return(append(res, list(intercept=intercept)))\n  }\n\n  else if (family==\"binomial\"){\n    if(spikeslab) stop(\"spikeslab not yet implemented\")\n    if(intercept) {warning(\"inercept not yet implemented\"); intercept<-F}\n\n\n    if(factoriseQ) res<-grpRRCpp_logistic_ff(X,y, annot,g, NoPerGroup, d_gamma, r_gamma, max_iter, th, calcELB, verbose, freqELB)\n    else res<-grpRRCpp_logistic_nf(X,y, annot,g, NoPerGroup,  d_gamma, r_gamma, max_iter, th, calcELB, verbose, freqELB)\n\n  }\n  else stop(\"Family not implemented\")\n}\n",
    "created" : 1499160965860.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2450841406",
    "id" : "76A344B9",
    "lastKnownWriteTime" : 1499169399,
    "last_content_update" : 1499169399,
    "path" : "~/Documents/LassoVariants/multiviewHDR/grpRR/R/fit_grpRR.R",
    "project_path" : "R/fit_grpRR.R",
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}